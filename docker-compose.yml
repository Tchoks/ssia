version: "3.8"

services:

  mongodb:
    image: mongo
    container_name: mongo_db
    hostname: mongodb
    restart: unless-stopped
    env_file:
      - .env
    environment:
      MONGO_INITDB_ROOT_USERNAME: $MONGO_ROOT_USERNAME
      MONGO_INITDB_ROOT_PASSWORD: $MONGO_ROOT_PASSWORD
      MONGO_INITDB_DATABASE: $MONGO_DB
      MONGO_DB_USERNAME: $MONGO_USERNAME
      MONGO_DB_PASSWORD: $MONGO_PASSWORD
    ports:
      - "27017:27017"
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo localhost:27017/springdb --quiet
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - spring-boot-simple
  #  mysqldb:
  #    container_name: mysql_db
  #    #    build:
  #    #      context: ./certs
  #    image: mysql
  #    restart: unless-stopped
  #    env_file: .env
  #    environment:
  #      - MYSQL_ROOT_PASSWORD=$MYSQLDB_ROOT_PASSWORD
  #      - MYSQL_DATABASE=$MYSQLDB_DATABASE
  #      - MYSQLDB_USER=$MYSQLDB_USER
  #    ports:
  #      - "3306:3306"
  #    #    command: [ "mysqld",
  #    #               "--character-set-server=utf8mb4",
  #    #               "--collation-server=utf8mb4_unicode_ci",
  #    #               "--bind-address=0.0.0.0",
  #    #               "--log-error-verbosity",
  #    #               "--require_secure_transport=ON",
  #    #               "--ssl-ca=/etc/ssl/certs/ca.pem",
  #    #               "--ssl-cert=/etc/ssl/certs/server-cert.pem",
  #    #               "--ssl-key=/etc/ssl/certs/server-key.pem",
  #    #               "--default_authentication_plugin=mysql_native_password" ]
  #    #    volumes:
  #    #      - type: bind
  #    #        source: ./certs/ssl
  #    #        target: /etc/ssl/certs/
  #    #      - ./certs/mysql/my.cnf:/etc/mysql/my.cnf
  #
  #    #    command:
  #    #      - './bin/bash -c chmod 444 /etc/certs/ca-cert.pem; chmod 444 /etc/certs/client-cert.pem; chmod 400 /etc/certs/client-key.pem; chmod 444 /etc/certs/server-cert.pem; chmod 400 /etc/certs/server-key.pem;'
  #    healthcheck:
  #      test: [ "CMD-SHELL", "mysql -u$MYSQLDB_USER -p$MYSQL_ROOT_PASSWORD content -e 'select 1'" ]
  #      interval: 10s
  #      timeout: 5s
  #      retries: 5
  #    networks:
  #      - spring-boot-simple

  app:
    container_name: ssia
    restart: on-failure
    env_file: .env
    build:
      context: .
    environment:
      SPRING_APPLICATION_JSON: '{
              "spring.data.mongodb.host"     : "mongodb",
              "spring.data.mongodb.port"     : "$MONGO_HOST_PORT",
              "spring.data.mongodb.database" : "$MONGO_DB",
              "spring.data.mongodb.username" : "$MONGO_ROOT_USERNAME",
              "spring.data.mongodb.password" : "$MONGO_ROOT_PASSWORD",
              "spring.profiles.active"       : "docker"
            }'
    ports:
      - "8081:8081"
    networks:
      - spring-boot-simple
    depends_on:
      - mongodb
    healthcheck:
      test: [ "CMD", "curl", "--fail --silent", "http://localhost:8080/actuator/health" ]
      interval: 10s
      timeout: 10s
      retries: 10

networks:
  spring-boot-simple: